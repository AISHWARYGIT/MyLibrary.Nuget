# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

stages:
- stage: Build_Stage
  displayName: Build Stage
  jobs:
  - job: BuildNuget
    displayName: Build Nuget packages
    variables:
      BuildConfiguration: release
    steps:

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Pack
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
        versioningScheme: 'off'

    - task: PublishBuildArtifacts@1
      displayName: Publish to Artifact/drop
      inputs:
        ArtifactName: 'drop'
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
        publishLocation: 'Container'
    
- stage: Release_Stage
  displayName: Release Stage
  jobs:
  - job: ReleaseNuget
    displayName: Release Nuget Packages
    variables:
      BuildConfiguration: release
    steps:

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: publish
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    

